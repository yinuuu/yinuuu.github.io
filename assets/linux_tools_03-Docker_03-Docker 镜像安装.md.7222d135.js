import{_ as s,c as n,o as a,a as l}from"./app.2918728e.js";const d=JSON.parse('{"title":"Docker镜像安装","description":"","frontmatter":{"title":"Docker镜像安装","author":"yinuuu","date":"2023/01/01","categories":["Docker"],"tags":["Docker"]},"headers":[{"level":3,"title":"1 Docker安装Nginx","slug":"_1-docker安装nginx","link":"#_1-docker安装nginx","children":[]},{"level":3,"title":"2 Docker安装MySQL","slug":"_2-docker安装mysql","link":"#_2-docker安装mysql","children":[]},{"level":3,"title":"3 开机自启动","slug":"_3-开机自启动","link":"#_3-开机自启动","children":[]}],"relativePath":"linux/tools/03-Docker/03-Docker 镜像安装.md","lastUpdated":1677165673000}'),p={name:"linux/tools/03-Docker/03-Docker 镜像安装.md"},o=l(`<h3 id="_1-docker安装nginx" tabindex="-1">1 Docker安装Nginx <a class="header-anchor" href="#_1-docker安装nginx" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">//</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">下载最新的nginx镜像</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">//</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">创建映射文件目录</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/data/programs/nginx</span></span>
<span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">html</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">logs</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">conf</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># mkdir -p /data/programs/nginx/{conf,log,html}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">//</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">先启动一个容器用于cp对应的文件类型</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">80</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">80</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">//</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">查看是否启动成功</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ps</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-a</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">//</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">复制文件到映射目录，481e121fb29f是第</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">显示的nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">的container</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">id</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#/data/programs/nginx是创建的映射文件路径，需替换成自己的路径。</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cp</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx:/etc/nginx/nginx.conf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/data/programs/nginx/conf/nginx.conf</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cp</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx:/etc/nginx/conf.d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/data/programs/nginx/conf/conf.d</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cp</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx:/usr/share/nginx/html</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/data/programs/nginx/html</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 停止此nginx，执行：</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stop</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 然后再删除nginx容器，执行：</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 重新启动nginx：注意/data/programs/nginx是创建的文件夹路径，需替换自己的。</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--restart=always</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">80</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">80</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">443</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">443</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/data/programs/nginx/html:/usr/share/nginx/html</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/data/programs/nginx/conf/nginx.conf:/etc/nginx/nginx.conf</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/data/programs/nginx/conf/conf.d:/etc/nginx/conf.d</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/data/programs/nginx/logs:/var/log/nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 查看是否启动成功：若有nginx并且status是up则启动成功。</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ps</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-a</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 修改nginx.cong配置：</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 进入conf：cd /data/programs/nginx/conf，修改了nginx.conf后，停止nginx然后加载即可生效。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 测试nginx配置</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">容器id</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 重新加载nginx配置</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">容器id</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reload</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 重启</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">restart</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">// </span><span style="color:#98C379;">下载最新的nginx镜像</span></span>
<span class="line"><span style="color:#ABB2BF;">docker </span><span style="color:#98C379;">pull</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">nginx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">// </span><span style="color:#98C379;">创建映射文件目录</span></span>
<span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">/data/programs/nginx</span></span>
<span class="line"><span style="color:#ABB2BF;">mkdir </span><span style="color:#98C379;">html</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">logs</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">conf</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># mkdir -p /data/programs/nginx/{conf,log,html}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">// </span><span style="color:#98C379;">先启动一个容器用于cp对应的文件类型</span></span>
<span class="line"><span style="color:#ABB2BF;">docker </span><span style="color:#98C379;">run</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">--name</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">nginx</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-p</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">80</span><span style="color:#98C379;">:</span><span style="color:#D19A66;">80</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-d</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">nginx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">// </span><span style="color:#98C379;">查看是否启动成功</span></span>
<span class="line"><span style="color:#ABB2BF;">docker </span><span style="color:#98C379;">ps</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-a</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">// </span><span style="color:#98C379;">复制文件到映射目录，481e121fb29f是第</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">)</span><span style="color:#98C379;">显示的nginx</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">的container</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">id</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#/data/programs/nginx是创建的映射文件路径，需替换成自己的路径。</span></span>
<span class="line"><span style="color:#ABB2BF;">docker </span><span style="color:#98C379;">cp</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">nginx:/etc/nginx/nginx.conf</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">/data/programs/nginx/conf/nginx.conf</span></span>
<span class="line"><span style="color:#ABB2BF;">docker </span><span style="color:#98C379;">cp</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">nginx:/etc/nginx/conf.d</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">/data/programs/nginx/conf/conf.d</span></span>
<span class="line"><span style="color:#ABB2BF;">docker </span><span style="color:#98C379;">cp</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">nginx:/usr/share/nginx/html</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">/data/programs/nginx/html</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 停止此nginx，执行：</span></span>
<span class="line"><span style="color:#ABB2BF;">docker </span><span style="color:#98C379;">stop</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">nginx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 然后再删除nginx容器，执行：</span></span>
<span class="line"><span style="color:#ABB2BF;">docker </span><span style="color:#98C379;">rm</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">nginx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 重新启动nginx：注意/data/programs/nginx是创建的文件夹路径，需替换自己的。</span></span>
<span class="line"><span style="color:#ABB2BF;">docker </span><span style="color:#98C379;">run</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">--restart=always</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-d</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">	-p </span><span style="color:#D19A66;">80</span><span style="color:#98C379;">:</span><span style="color:#D19A66;">80</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-p</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">443</span><span style="color:#98C379;">:</span><span style="color:#D19A66;">443</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">	--name </span><span style="color:#98C379;">nginx</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">	-v </span><span style="color:#98C379;">/data/programs/nginx/html:/usr/share/nginx/html</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">	-v </span><span style="color:#98C379;">/data/programs/nginx/conf/nginx.conf:/etc/nginx/nginx.conf</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">	-v </span><span style="color:#98C379;">/data/programs/nginx/conf/conf.d:/etc/nginx/conf.d</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">	-v </span><span style="color:#98C379;">/data/programs/nginx/logs:/var/log/nginx</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">nginx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 查看是否启动成功：若有nginx并且status是up则启动成功。</span></span>
<span class="line"><span style="color:#ABB2BF;">docker </span><span style="color:#98C379;">ps</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-a</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 修改nginx.cong配置：</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 进入conf：cd /data/programs/nginx/conf，修改了nginx.conf后，停止nginx然后加载即可生效。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 测试nginx配置</span></span>
<span class="line"><span style="color:#ABB2BF;">docker </span><span style="color:#98C379;">exec</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">容器id</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">nginx</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-t</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 重新加载nginx配置</span></span>
<span class="line"><span style="color:#ABB2BF;">docker </span><span style="color:#98C379;">exec</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">容器id</span><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">nginx</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-s</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">reload</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 重启</span></span>
<span class="line"><span style="color:#ABB2BF;">docker </span><span style="color:#98C379;">restart</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">nginx</span></span>
<span class="line"></span></code></pre></div><h3 id="_2-docker安装mysql" tabindex="-1">2 Docker安装MySQL <a class="header-anchor" href="#_2-docker安装mysql" aria-hidden="true">#</a></h3><h4 id="_2-1-安装步骤" tabindex="-1">2.1 安装步骤 <a class="header-anchor" href="#_2-1-安装步骤" aria-hidden="true">#</a></h4><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 拉取mysql镜像（或者指定版本也行，例如 docker pull mysql5.7 ）</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 创建挂载目录，数据库的配置和数据文件，不适合放容器内部，需要挂在到宿主机上。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 绝对路径方式</span></span>
<span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/data/programs/mysql/{conf,data}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 相对路径方式(需要进cd到相应目录)</span></span>
<span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./mysql/{conf,data}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 启动mysql容器</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3306</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">3306</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/data/programs/mysql/conf:/etc/mysql/conf.d</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/data/programs/mysql/data:/var/lib/mysql</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">MYSQL_ROOT_PASSWORD=</span><span style="color:#F78C6C;">123456</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 拉取mysql镜像（或者指定版本也行，例如 docker pull mysql5.7 ）</span></span>
<span class="line"><span style="color:#ABB2BF;">docker </span><span style="color:#98C379;">pull</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">mysql</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 创建挂载目录，数据库的配置和数据文件，不适合放容器内部，需要挂在到宿主机上。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 绝对路径方式</span></span>
<span class="line"><span style="color:#ABB2BF;">mkdir </span><span style="color:#D19A66;">-p</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">/data/programs/mysql/{conf,data}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 相对路径方式(需要进cd到相应目录)</span></span>
<span class="line"><span style="color:#ABB2BF;">mkdir </span><span style="color:#D19A66;">-p</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">./mysql/{conf,data}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 启动mysql容器</span></span>
<span class="line"><span style="color:#ABB2BF;">docker </span><span style="color:#98C379;">run</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-d</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-p</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">3306</span><span style="color:#98C379;">:</span><span style="color:#D19A66;">3306</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">	-v </span><span style="color:#98C379;">/data/programs/mysql/conf:/etc/mysql/conf.d</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">	-v </span><span style="color:#98C379;">/data/programs/mysql/data:/var/lib/mysql</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">	-e </span><span style="color:#98C379;">MYSQL_ROOT_PASSWORD=</span><span style="color:#D19A66;">123456</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">--name</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">mysql</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">mysql</span></span>
<span class="line"></span></code></pre></div><p>容器起动起来后通过docker ps -a 查询，已经又一个名称叫mysql的容器并且状态是up</p><h4 id="_2-2-启动容器命令解释" tabindex="-1">2.2 启动容器命令解释： <a class="header-anchor" href="#_2-2-启动容器命令解释" aria-hidden="true">#</a></h4><p>-d 表示后台运行 -p 3306:3306 表示端口映射 -p 宿主机端口:容器端口 -v /data/programs/mysql/conf:/etc/mysql/conf.d 表示挂载，-v 宿主机目录或文件:容器内目录或文件 -e MYSQL_ROOT_PASSWORD=123456 表示设置密码，此处密码为123456 --name mysql 表示启动的容器名称，此处容器名称叫mysql --restart=always 最后一个mysql 表示需要启动的镜像名称</p><h4 id="_2-3-常见问题及解决" tabindex="-1">2.3 常见问题及解决 <a class="header-anchor" href="#_2-3-常见问题及解决" aria-hidden="true">#</a></h4><ul><li>修正docker mysql 字符集为utf8</li><li>容器数据卷，保证容器实例被删除后本地有备份数据</li></ul><p>显示字符集配置：SHOW VARIABLES LIKE &#39;character%&#39;; 重新创建实例：docker run -d -p 3306:3306 --privileged=true -v /data/mysql/log:/var/log/mysql -v /data/mysql/data:/var/lib/mysql -v /data/mysql/conf:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=123456 --name mysql mysql:5.7 修改字符配置： [client] default_character_set=utf8 [mysqld] collation_server = utf8_general_ci character_set_server = utf8 重启：docker restart mysql 进入：docker exec -it mysql bash 连接：mysql -uroot -p</p><h3 id="_3-开机自启动" tabindex="-1">3 开机自启动 <a class="header-anchor" href="#_3-开机自启动" aria-hidden="true">#</a></h3><h4 id="_3-1-设置docker服务自启动" tabindex="-1">3.1 设置docker服务自启动 <a class="header-anchor" href="#_3-1-设置docker服务自启动" aria-hidden="true">#</a></h4><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 启动服务 </span></span>
<span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#FFCB6B;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 设置开机自启动 </span></span>
<span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#FFCB6B;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">enable</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker.service</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">Created</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">symlink</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/systemd/system/multi-user.target.wants/docker.service</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">to</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/lib/systemd/system/docker.service.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 查看自启动设置是否成功</span></span>
<span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#FFCB6B;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">list-unit-files</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">grep</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">enable</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">grep</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">docker.service</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">enabled</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 启动服务 </span></span>
<span class="line"><span style="color:#ABB2BF;">% systemctl </span><span style="color:#98C379;">start</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">docker</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 设置开机自启动 </span></span>
<span class="line"><span style="color:#ABB2BF;">% systemctl </span><span style="color:#98C379;">enable</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">docker.service</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">Created </span><span style="color:#98C379;">symlink</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">/etc/systemd/system/multi-user.target.wants/docker.service</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">to</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">/usr/lib/systemd/system/docker.service.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 查看自启动设置是否成功</span></span>
<span class="line"><span style="color:#ABB2BF;">% systemctl </span><span style="color:#98C379;">list-unit-files</span><span style="color:#ABB2BF;"> | grep </span><span style="color:#98C379;">enable</span><span style="color:#ABB2BF;"> | grep </span><span style="color:#98C379;">docker</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">docker.service </span><span style="color:#98C379;">enabled</span></span>
<span class="line"></span></code></pre></div><h4 id="_3-2-设置镜像自动启动" tabindex="-1">3.2 设置镜像自动启动 <a class="header-anchor" href="#_3-2-设置镜像自动启动" aria-hidden="true">#</a></h4><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 启动 </span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">d5c440e6d44f</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 自动启动 </span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">update</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--restart=always</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">d5c440e6d44f</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 启动 </span></span>
<span class="line"><span style="color:#ABB2BF;">docker </span><span style="color:#98C379;">start</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">d5c440e6d44f</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 自动启动 </span></span>
<span class="line"><span style="color:#ABB2BF;">docker </span><span style="color:#98C379;">update</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">--restart=always</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">d5c440e6d44f</span></span>
<span class="line"></span></code></pre></div>`,16),e=[o];function c(t,r,y,i,C,B){return a(),n("div",null,e)}const D=s(p,[["render",c]]);export{d as __pageData,D as default};
